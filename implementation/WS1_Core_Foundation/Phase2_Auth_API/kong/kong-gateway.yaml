apiVersion: v1
kind: Namespace
metadata:
  name: nexus-gateway
  labels:
    name: nexus-gateway
    app.kubernetes.io/name: nexus-architect
    app.kubernetes.io/component: api-gateway
---
apiVersion: v1
kind: Secret
metadata:
  name: kong-secrets
  namespace: nexus-gateway
type: Opaque
data:
  # Base64 encoded values
  KONG_PG_PASSWORD: S29uZ0RCMjAyNA==  # KongDB2024
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kong-config
  namespace: nexus-gateway
data:
  KONG_DATABASE: postgres
  KONG_PG_HOST: postgresql-primary.nexus-infrastructure
  KONG_PG_PORT: "5432"
  KONG_PG_DATABASE: kong
  KONG_PG_USER: kong
  KONG_PROXY_ACCESS_LOG: /dev/stdout
  KONG_ADMIN_ACCESS_LOG: /dev/stdout
  KONG_PROXY_ERROR_LOG: /dev/stderr
  KONG_ADMIN_ERROR_LOG: /dev/stderr
  KONG_ADMIN_LISTEN: 0.0.0.0:8001
  KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 ssl
  KONG_PLUGINS: bundled,oidc,rate-limiting,cors,jwt,request-validator
---
apiVersion: batch/v1
kind: Job
metadata:
  name: kong-migration
  namespace: nexus-gateway
spec:
  template:
    spec:
      containers:
      - name: kong-migration
        image: kong:3.4
        env:
        - name: KONG_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kong-secrets
              key: KONG_PG_PASSWORD
        envFrom:
        - configMapRef:
            name: kong-config
        command:
        - /bin/bash
        - -c
        - |
          # Create database and user
          PGPASSWORD=PostgresAdmin2024 psql -h postgresql-primary.nexus-infrastructure -U postgres -d postgres -c "
          CREATE DATABASE kong;
          CREATE USER kong WITH PASSWORD 'KongDB2024';
          GRANT ALL PRIVILEGES ON DATABASE kong TO kong;
          ALTER DATABASE kong OWNER TO kong;
          "
          # Run Kong migrations
          kong migrations bootstrap
      restartPolicy: OnFailure
  backoffLimit: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong-gateway
  namespace: nexus-gateway
  labels:
    app: kong-gateway
    app.kubernetes.io/name: nexus-architect
    app.kubernetes.io/component: api-gateway
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kong-gateway
  template:
    metadata:
      labels:
        app: kong-gateway
    spec:
      containers:
      - name: kong
        image: kong:3.4
        env:
        - name: KONG_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kong-secrets
              key: KONG_PG_PASSWORD
        envFrom:
        - configMapRef:
            name: kong-config
        ports:
        - name: proxy
          containerPort: 8000
        - name: proxy-ssl
          containerPort: 8443
        - name: admin
          containerPort: 8001
        readinessProbe:
          httpGet:
            path: /status
            port: 8001
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /status
            port: 8001
          initialDelaySeconds: 60
          periodSeconds: 30
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: kong-gateway
  namespace: nexus-gateway
  labels:
    app: kong-gateway
spec:
  ports:
  - name: proxy
    port: 8000
    targetPort: 8000
  - name: proxy-ssl
    port: 8443
    targetPort: 8443
  selector:
    app: kong-gateway
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: kong-admin
  namespace: nexus-gateway
  labels:
    app: kong-gateway
spec:
  ports:
  - name: admin
    port: 8001
    targetPort: 8001
  selector:
    app: kong-gateway
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kong-gateway-ingress
  namespace: nexus-gateway
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - api.nexus-architect.local
    secretName: kong-gateway-tls
  rules:
  - host: api.nexus-architect.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kong-gateway
            port:
              number: 8000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kong-admin-ingress
  namespace: nexus-gateway
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
spec:
  tls:
  - hosts:
    - kong-admin.nexus-architect.local
    secretName: kong-admin-tls
  rules:
  - host: kong-admin.nexus-architect.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kong-admin
            port:
              number: 8001

